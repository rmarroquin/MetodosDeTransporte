<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCACYAJcDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD36iimmRF6so+poAdRUfnx9A2foM0ebnokh/DH86AJKKiLyfwx
        H/gTCkbziv8AAp/E/wCFAFbTtVh1FpVjBBjPQ+lX6x7LSfsuozXrOHlkUpkArhSxYjqe5/QVfvb2KwtW
        uJs7V7Ack9hQSnpqWaKjhmSeJZY23I3Q1JQUFFFFABRRRQAUUUUAFFFFAAKKBRQAzy175P1YmlCIOiqP
        oKdTWZh91c/U4oAdRUR80jkqv0Gf51GyYGXmfH12j9KBFgkAcnH1qJriEHHmKfoc1UeWzjOTtY+2WrN1
        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
        WJgpx0pwGKKKGULRRRSAKKKKAP/Z
</value>
  </data>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAQAAAAAADoAgAAJgAAABAQEAAAAAAAKAEAAA4DAAAoAAAAIAAAAEAAAAABAAQAAAAAAIAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAiIiIiIiIiIiAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAD/////
        ////8IAAAAAAAAAA+IiPiI+IiPCAAAAAAAAAAP/////////wgAAAAAAAAAD4iI+Ij4iI8IAAAAAAAAAA
        //////////CIiIiIiAAAAPiIj4iPiIjwgAAAAAgAAAD/////////8I////8IAAAA+IiPiI+IiPCIj4iP
        CAAAAP/////////wj////wgAAADMzMzMzMzMwIiPiI8IAAAAz8z8z8z8z8CP////CAAAAAAAAAAAAAAA
        zMzMzAgAAAAAAAAAAA//DPzPzPwIAAAAAACIAAAPiAAAAAAACAAAAAAIiIAAD/////8IAAAAAAAAiIiI
        AA+Ij4iPCAAAAAAAAIiIiAAP/////wgAAAAAAAAIiIAADMzMzMwIAAAAAAAACIiAAAz8z8z8CAAAAAAA
        AAiIgAAAAAAAAAgAAAAAAACAiIgAAACAAAAAAAAAAAAAAIiICAAIAAAAAAAAAAAAAAAHd3CAgAAAAAAA
        AAAAAAAACIiIAAAAAAAAAAAAAAAAAACIiIgAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAH/+AA
        B//gAAf/4AAH/+AAB//gAAf/4AAAA+AAAAPgAAAD4AAAA+AAAAPgAAAD4AAAA+AAAAP/PAAD/hwAA/wM
        AD/4BAA/8AAAP/wMAD/8DAA//AwAP/wHwP/+A4D//wEB//+AA///wAf/////////////////////////
        //8oAAAAEAAAACAAAAABAAQAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAA
        AACAAIAAgIAAAMDAwACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAAAAAAAAAAB3d3d3d3
        AAAAAAAAAAcAAA//////BwAADw8PDw8HAAAP/////wd3dw8PAAAAAAAHD/8P//8P/wcPDw8PDw8PBw//
        D///D/8HzMwMzMzPDwfMzAzMzM//BwAADw8PDw8HAAAP/////wcAAMzMzMzMxwAAzMzMzMzA//8AAIAP
        AAAADwAAAA8AAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAAAADwAAAA8AEAAA==
</value>
  </data>
</root>